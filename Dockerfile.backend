FROM node:18.15.0-alpine AS bknd-base
FROM percona/percona-server-mongodb:6.0 AS db-base

########################### Backend Install Dependencies #####################################

# Install dependencies only when needed
FROM bknd-base AS deps

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

WORKDIR /app

# ENV NODE_ENV production

# Install dependencies based on the preferred package manager
COPY packages/backend/package.json yarn.lock* ./
# RUN yarn install --frozen-lockfile
RUN yarn install --verbose --network-timeout 100000

ENV PORT 3000
EXPOSE 3000

################################## Backend Build #############################################

FROM bknd-base AS builder

WORKDIR /app

COPY .eslintrc.js .prettierrc jest.config.js tsconfig.json tsconfig.build.json ./

COPY packages/backend ./packages/backend

COPY --from=deps /app/node_modules ./packages/backend/node_modules

ENV NODE_ENV production
ENV PATH="${PATH}:/app/packages/backend/node_modules/.bin"

WORKDIR /app/packages/backend

RUN yarn build

EXPOSE 3000

################################## Backend Deploy #############################################

FROM bknd-base AS runner

USER node

WORKDIR /app

ENV NODE_ENV production

# RUN addgroup --system --gid 1001 nodejsgroup
# RUN adduser --system --uid 1001 nodejsuser

COPY --from=builder --chown=node:node /app/packages/backend/node_modules ./node_modules
COPY --from=builder --chown=node:node /app/packages/backend/dist ./dist

# USER nodejsuser

ENV NODE_ENV="${NODE_ENV}" \
    PATH="${PATH}:/app/node_modules/.bin" \
    USER="node"

EXPOSE 3000

ENTRYPOINT ["node", "dist/src/main"]

################################## Database #############################################
FROM db-base AS database

EXPOSE 27017
